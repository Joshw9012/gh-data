name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs: #output a simple value from this job
      script-file: ${{steps.publish.outputs.script-file}} #(not reserved name , can by any name); 'steps' is a context value. just like 'github' ; 'steps' contains the info with the job steps
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish #this id will be access by job 'output'
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';' #output the file name will be store into $github_output variable for later use
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get Build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files # when download artifact, this name must be the same name as upload artifact in Build job.
      - name: Output contents
        run: ls # this will list all the files for the artifact
      - name: Output filename
        run: echo "${{needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
